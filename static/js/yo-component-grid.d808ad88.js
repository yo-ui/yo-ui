(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["yo-component-grid"],{3756:function(e,o,t){},"56f6":function(e,o,t){"use strict";t("3756")},d790:function(e,o,t){"use strict";t.r(o);var d=function(){var e=this,o=e.$createElement,t=e._self._c||o;return t("div",{staticClass:"yo-component-grid-page"},[t("yo-anchor",{attrs:{text:"Grid"+e.$lang("栅格"),size:"18"}}),t("p",[e._v(" "+e._s(e.$lang("我们采用标准的24格布局容器，利用容器完成简单的网络布局。栅格组件（Row、Col）可以自定义一行内的列数，及各列所占比例，宫格组件则是将每行等分为宽度相等的列，甚至可以将单元格设置为正方形，并支持动态适应屏幕，就像九宫格一样"))+" ")]),t("p",{staticClass:"alert",domProps:{innerHTML:e._s(e.$lang("注意：非 template/render 模式下，需使用 <code>y-row</code>,<code>y-col</code>。"))}}),t("yo-anchor",{attrs:{text:e.$lang("组件注册"),size:24}}),t("yo-code",{attrs:{type:"javascript",src:"/components/demos/layout/grid/use.js"}}),t("yo-anchor",{attrs:{text:e.$lang("代码示例"),size:24}}),t("yo-example",{attrs:{demo:"layout/grid/normal"},scopedSlots:e._u([{key:"desc",fn:function(){return[t("yo-desc",{attrs:{title:e.$lang("基础栅格")}},[e._v(" "+e._s(e.$lang("从堆叠到水平排列。使用单一的一组 Row 和 Col 栅格组件，就可以创建一个基本的栅格系统，所有列（Col）必须放在 Row 内。"))+" ")])]},proxy:!0}])}),t("yo-example",{attrs:{demo:"layout/grid/gutter"},scopedSlots:e._u([{key:"desc",fn:function(){return[t("yo-desc",{attrs:{title:e.$lang("栅格间隔")}},[t("span",{domProps:{innerHTML:e._s(e.$lang("分栏之间存在间隔。栅格分左右上下间隔、左右间隔、上下间隔三种类型,Row 组件 提供 <code>gutter</code> 属性来指定每一栏之间的间隔，默认间隔为 0。我们推荐使用 <code>(16+8n)px</code> 作为栅格间隔。(n 是自然数) 如果要支持响应式，可以写成<code>{ xs: 8, sm: 16, md: 24, lg: 32 }</code>。如果只需要垂直或者水平间距，可以使用<code>gutterX,gutterY</code>"))}})])]},proxy:!0}])}),t("yo-example",{attrs:{demo:"layout/grid/group"},scopedSlots:e._u([{key:"desc",fn:function(){return[t("yo-desc",{attrs:{title:e.$lang("混合布局")}},[e._v(" "+e._s(e.$lang("通过基础的 1/24 分栏任意扩展组合形成较为复杂的混合布局。"))+" ")])]},proxy:!0}])}),t("yo-example",{attrs:{demo:"layout/grid/offset"},scopedSlots:e._u([{key:"desc",fn:function(){return[t("yo-desc",{attrs:{title:e.$lang("分栏偏移")}},[e._v(" "+e._s(e.$lang("支持偏移指定的栏数。"))+" ")])]},proxy:!0}])}),t("yo-example",{attrs:{demo:"layout/grid/align"},scopedSlots:e._u([{key:"desc",fn:function(){return[t("yo-desc",{attrs:{title:e.$lang("对齐方式")}},[e._v(" "+e._s(e.$lang("通过 flex 布局来对分栏进行灵活的对齐。"))+" ")])]},proxy:!0}])}),t("yo-example",{attrs:{demo:"layout/grid/flex"},scopedSlots:e._u([{key:"desc",fn:function(){return[t("yo-desc",{attrs:{title:e.$lang("flex 填充")}},[e._v(" "+e._s(e.$lang("Col 提供 flex 属性以支持填充"))+" ")])]},proxy:!0}])}),t("yo-example",{attrs:{demo:"layout/grid/order"},scopedSlots:e._u([{key:"desc",fn:function(){return[t("yo-desc",{attrs:{title:e.$lang("栅格排序")}},[e._v(" "+e._s(e.$lang("列排序。通过使用order属性或( push 和 pull 类)就可以很容易的改变列（column）的顺序。"))+" ")])]},proxy:!0}])}),t("yo-example",{attrs:{demo:"layout/grid/responsive"},scopedSlots:e._u([{key:"desc",fn:function(){return[t("yo-desc",{attrs:{title:e.$lang("响应式布局")}},[t("span",{domProps:{innerHTML:e._s(e.$lang('参照了 Bootstrap 的\n        响应式设计，预设了七个响应尺寸：<code>xs</code>、<code>sm</code>、<code>md</code>、<code\n          >lg </code\n        >、<code> xl</code\n        >、<code>xxl</code>、<code>xxxl</code>。<code>span</code>、<code>pull</code>、<code>push</code>、<code>offset</code>、<code\n          >order</code\n        >\n        属性可以通过内嵌到<code> xs</code\n        >、<code>sm</code>、<code>md</code>、<code>lg</code>、<code>xl</code>、<code>xxl</code>、<code>xxxl</code>属性中来使用。\n        其中 <code>:xs="6" </code>相当于 <code>:xs="{ span: 6 }</code>"。'))}})])]},proxy:!0}])}),t("yo-anchor",{attrs:{text:"Row "+e.$lang("属性"),size:24}}),t("table",{staticClass:"table"},[t("tr",e._l(e.propsTableKeys,(function(o){return t("th",{key:o.code},[e._v(" "+e._s(e.$lang(o.name))+" ")])})),0),e._l(e.propsTableData,(function(o){return t("tr",{key:o.param},[t("td",[e._v(e._s(o.param))]),t("td",{domProps:{innerHTML:e._s(o.desc)}}),t("td",[e._v(e._s(o.type))]),t("td",[e._v(e._s(o.default||"-"))]),t("td",[e._v(e._s(o.version||"-"))])])}))],2),t("yo-anchor",{attrs:{text:"Col "+e.$lang("属性"),size:24}}),t("table",{staticClass:"table"},[t("tr",e._l(e.propsTableKeys,(function(o){return t("th",{key:o.code},[e._v(" "+e._s(e.$lang(o.name))+" ")])})),0),e._l(e.colPropsTableData,(function(o){return t("tr",{key:o.param},[t("td",[e._v(e._s(o.param))]),t("td",{domProps:{innerHTML:e._s(o.desc)}}),t("td",[e._v(e._s(o.type))]),t("td",[e._v(e._s(o.default||"-"))]),t("td",[e._v(e._s(o.version||"-"))])])}))],2)],1)},c=[],a={data:function(){return{propsTableKeys:[{code:"param",name:"参数"},{code:"desc",name:"说明"},{code:"type",name:"类型"},{code:"default",name:"默认值"},{code:"version",name:"版本"}],propsTableData:[{param:"gutter",desc:"栅格间距，单位 px，上下左右平分",type:"Number|Object",default:"0",version:""},{param:"gutterX",desc:"栅格间距，单位 px，左右平分",type:"Number|Object",default:"0",version:""},{param:"gutterY",desc:"栅格间距，单位 px，上下平分",type:"Number|Object",default:"0",version:""},{param:"type",desc:'布局模式，可选值为flex或不选，在 <a class="yo-link yo-link-primary yo-link-underline" href="http://caniuse.com/#search=flex">现代浏览器</a> 下有效',type:"String",default:"",version:""},{param:"align",desc:"flex 布局下的垂直对齐方式,可选值为<code>flex-start</code>、<code>flex-end</code>、<code>center</code>、<code>space-between</code>、<code>space-around</code>、<code>initial</code>、<code>inherit</code>(可参照css align-item属性)",type:"String",default:"",version:""},{param:"direction",desc:"flex 布局下的区块方向方式，可选值为<code>row</code\n          >、<code>row-reverse</code>、<code>column</code>、<code>column-reverse</code>、<code>initial</code>、<code\n            >inherit</code\n          >(可参照css flex-direction属性)",type:"String",default:"",version:""},{param:"justify",desc:"flex 布局下的水平排列方式，可选值为\n          <code>flex-start</code\n          >、<code>flex-end</code>、<code>center</code>、<code>space-between</code>、<code>space-around</code>、<code>initial</code>、<code\n            >inherit</code\n          >(可参照css justify-content属性)",type:"String",default:"",version:""},{param:"tag",desc:"自定义元素标签",type:"String",default:"div",version:""}],colPropsTableData:[{param:"flex",desc:"flex 布局填充",type:"String|Number",default:"",version:""},{param:"offset",desc:"栅格左侧的间隔格数，间隔内不可以有栅格",type:"Number",default:"0",version:""},{param:"order",desc:"栅格顺序，<code>flex</code> 布局模式下有效",type:"Number",default:"0",version:""},{param:"span",desc:"栅格占位格数，为 0 时相当于 display: none",type:"Number",default:"0",version:""},{param:"pull",desc:"栅格向左移动格数",type:"Number",default:"0",version:""},{param:"push",desc:"栅格向右移动格数",type:"Number",default:"0",version:""},{param:"xs",desc:"<code><576px</code> 响应式栅格，可为栅格数或一个包含其他属性的对象,(例如： <code> {span: 4, offset: 4}</code>)",type:"Number|Object",default:"",version:""},{param:"sm",desc:"<code>≥576px</code> 响应式栅格，可为栅格数或一个包含其他属性的对象,(例如： <code> {span: 4, offset: 4}</code>)",type:"Number|Object",default:"",version:""},{param:"md",desc:"<code>≥768px</code> 响应式栅格，可为栅格数或一个包含其他属性的对象,(例如： <code> {span: 4, offset: 4}</code>)",type:"Number|Object",default:"",version:""},{param:"lg",desc:"<code>≥992px</code> 响应式栅格，可为栅格数或一个包含其他属性的对象,(例如： <code> {span: 4, offset: 4}</code>)",type:"Number|Object",default:"",version:""},{param:"xl",desc:"<code>≥1200px</code> 响应式栅格，可为栅格数或一个包含其他属性的对象,(例如： <code> {span: 4, offset: 4}</code>)",type:"Number|Object",default:"",version:""},{param:"xxl",desc:"<code>≥1600px</code> 响应式栅格，可为栅格数或一个包含其他属性的对象,(例如： <code> {span: 4, offset: 4}</code>)",type:"Number|Object",default:"",version:""},{param:"xxxl",desc:"<code>≥1920px</code> 响应式栅格，可为栅格数或一个包含其他属性的对象",type:"Number|Object",default:"",version:""},{param:"tag",desc:"自定义元素标签",type:"String",default:"div",version:""}]}}},s=a,r=(t("56f6"),t("2877")),n=Object(r["a"])(s,d,c,!1,null,null,null);o["default"]=n.exports}}]);